{"version":3,"sources":["colors.js"],"names":["angular","module","factory","get","hex","alpha","patt","matches","exec","r","parseInt","g","b","a","parseFloat","toFixed","rgba","window"],"mappings":"CAAC,SAAUA;IACT;IAEAA,QAAQC,OAAO,gBAAgBC,QAAQ,cAAa;QAEhD;YAQIC,KAAK,SAAUC,KAAKC;gBAEhB,IAAIC,OAAO;gBACX,IAAIC,UAAUD,KAAKE,KAAKJ;gBAGxB,IAAIK,IAAIC,SAASH,QAAQ,IAAI;gBAC7B,IAAII,IAAID,SAASH,QAAQ,IAAI;gBAC7B,IAAIK,IAAIF,SAASH,QAAQ,IAAI;gBAC7B,IAAIM,IAAIC,WAAWT,OAAOU,QAAQ;gBAGlC,IAAIC,OAAO,UAAUP,IAAI,MAAME,IAAI,MAAMC,IAAI,MAAMC,IAAI;gBAGvD,OAAOG;;;;GAOnBC,OAAOjB","file":"ng-color-utils.js","sourcesContent":["(function (angular) {\n  'use strict';\n\n  angular.module('ngColorUtils').factory('hex2rgba', [function () {\n\n      return {\n          /**\n           * Return the rgba format css from hex and alpha\n           *\n           * @param string hex css color format #223344\n           * @param float alpha between 0 and 1\n           * @return string\n           */\n          get: function (hex, alpha) {\n              //extract the two hexadecimal digits for each color\n              var patt = /^#([\\da-fA-F]{2})([\\da-fA-F]{2})([\\da-fA-F]{2})$/;\n              var matches = patt.exec(hex);\n\n              //convert them to decimal\n              var r = parseInt(matches[1], 16);\n              var g = parseInt(matches[2], 16);\n              var b = parseInt(matches[3], 16);\n              var a = parseFloat(alpha).toFixed(1);\n\n              //create rgba string\n              var rgba = \"rgba(\" + r + \",\" + g + \",\" + b + \",\" + a + \")\";\n\n              //return rgba colour\n              return rgba;\n          }\n\n      };\n\n  }]);\n\n}(window.angular));\n"],"sourceRoot":"dist"}